{"version":3,"sources":["uptime-robot-dist.js"],"names":[],"mappings":"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","file":"uptime-robot-dist.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('uptime-robot'), require('bluebird'), require('lodash'), require('request')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'uptime-robot', 'bluebird', 'lodash', 'request'], factory) :\n  factory((global.null = {}), global.Client, global.bluebird, global._, global.request)\n}(this, function (exports, Client, bluebird, _, request) { 'use strict';\n\n  Client = ('default' in Client ? Client['default'] : Client);\n  bluebird = ('default' in bluebird ? bluebird['default'] : bluebird);\n  _ = ('default' in _ ? _['default'] : _);\n  request = ('default' in request ? request['default'] : request);\n\n  'use strict';\n\n  class UptimeRobotServerError extends Error {\n    constructor(statusCode, message) {\n\n      super();\n      this.name = this.constructor.name;\n      this.statusCode = statusCode;\n      this.message = message;\n    }\n  }\n\n  var UptimeRobotError = UptimeRobotServerError;\n\n  'use strict';\n\n  const Monitor__PREFIX = 'monitor';\n\n  var contactArray;\n\n  class Monitor {\n\n    constructor(options) {\n      this.id = options.id;\n      this.friendlyName = options.friendlyname;\n      this.URL = options.url;\n      this.type = options.type || '1';\n      this.subType = options.subtype;\n      this.keywordType = options.keywordtype;\n      this.keywordValue = options.keywordvalue;\n      this.HTTPUsername = options.httpusername;\n      this.HTTPPassword = options.httppassword;\n      this.log = (options.log || []);\n      this.alertContacts = this.contacts;\n      this.interval = options.interval;\n\n      contactArray = [];\n    }\n\n    static get singular() {\n      return Monitor__PREFIX;\n    }\n\n    static get plural() {\n      return `${Monitor__PREFIX}s`;\n    }\n\n    set contact(contact) {\n\n      contactArray.push(contact);\n    }\n\n    get contacts() {\n      return _.map(contactArray, (contact) => {\n        return contact.toString();\n      }).join('-');\n    }\n\n    validate() {\n      if (!_.has(this, 'friendlyName')) {\n        return Error('`monitorFriendlyName` not defined');\n      } else if (!_.has(this, 'URL')) {\n        return Error('`monitorURL` not defined');\n      }\n\n      return true;\n    }\n\n    parse() {\n      var keys = _.keys(this);\n\n      return _.chain(keys)\n          .map(key => {\n            if (key == 'log' || key.charAt(0) === '_') {\n              return null;\n            }\n\n            return [Monitor__PREFIX + key.charAt(0).toUpperCase() + key.slice(1), this[key]];\n          })\n          .object()\n          .value();\n    }\n  }\n\n  exports.Monitor = Monitor;\n\n  'use strict';\n\n  const Contact__PREFIX = 'alertContact';\n\n  class Contact {\n    constructor(options) {\n      this.id = options.id;\n      this.friendlyName = options.friendlyname;\n      this.type = options.type || '2';\n      this.value = options.value;\n\n      this.config = {threshold: 0, recurrence: 0};\n\n    }\n\n    static get singular() {\n      return Contact__PREFIX;\n    }\n\n    static get plural() {\n      return `${Contact__PREFIX}s`;\n    }\n\n    toString() {\n      return [this.id, this.config.threshold, this.config.recurrence].join('_');\n    }\n\n    validate() {\n      if (!_.has(this, 'type')) {\n        return Error('`type` not defined');\n      } else if (!_.has(this, 'value')) {\n        return Error('`type` not defined');\n      }\n\n      return true;\n    }\n\n    parse() {\n      var keys = _.keys(this);\n\n      return _.chain(keys)\n          .map(key => {\n            if (key === 'config') {\n              return null;\n            }\n\n            return [Contact__PREFIX + key.charAt(0).toUpperCase() + key.slice(1), this[key]];\n          })\n          .filter()\n          .object()\n          .value();\n    }\n  }\n\n  exports.Contact = Contact;\n\n  'use strict';\n\n  const BASE = 'http://api.uptimerobot.com/';\n\n  class client__Client {\n    constructor(apiKey) {\n\n      if (apiKey === '' || typeof apiKey !== 'string') {\n        throw new Error('Uptime Robot API Key must be provided');\n      }\n\n      this.apiKey = apiKey;\n    }\n\n    request(method, endpoint, params = {}) {\n      var payload = {\n        method,\n        uri: BASE + endpoint\n      };\n\n      payload.json = true;\n\n      params.apiKey = this.apiKey;\n      params.noJsonCallback = 1;\n      params.format = 'json';\n\n      if (method === 'GET') {\n        payload.qs = params;\n      } else {\n        payload.form = params;\n      }\n\n      return new bluebird((resolve, reject) => {\n\n        request(payload, function(error, response, body) {\n          if (error) {\n            return reject(error);\n          } else if (response.statusCode && response.statusCode !== 200) {\n            return reject(new UptimeRobotError(response.statusCode, `Server responded with an ${response.statusCode} status code!`));\n          } else if (body.stat !== 'ok') {\n            return reject(new UptimeRobotError(body.id, body.message));\n          }\n\n          return resolve(body);\n        });\n\n      });\n    }\n\n    list(options = {}, Instance = Monitor) {\n\n      return new bluebird((resolve, reject) => {\n        let params = {};\n        if (Instance.name == Monitor.name) {\n          if (!options.logs && options.alertContacts) {\n            return reject(new Error('logs is required if alert contacts is true.'));\n          }\n\n          if (options.monitors) {\n            params.monitors = options.monitors.join('-');\n          }\n          if (options.customUptimeRatio) {\n            params.customUptimeRatio = options.customUptimeRatio.join('-');\n          }\n          if (options.logs) {\n            params.logs = '1';\n          }\n          if (options.alertContacts) {\n            params.alertContacts = '1';\n          }\n          if (options.showMonitorAlertConcats) {\n            params.showMonitorAlertConcats = '1';\n          }\n          if (options.showTimezone) {\n            params.showTimezone = '1';\n          }\n        } else if (Instance.name == Contact.name) {\n\n          if (options.alertcontacts) {\n            params.alertcontacts = options.alertcontacts.join('-');\n          }\n          if (options.offset) {\n            params.offset = options.offset;\n          }\n          if (options.limit) {\n            params.limit = options.limit;\n          }\n        }\n\n        let endpoint = 'get' + Instance.plural.charAt(0).toUpperCase() + Instance.plural.slice(1);\n        return this\n            .request('GET', endpoint, params)\n            .then(response => {\n\n              let results = _.map(response[Instance.plural.toLowerCase()][Instance.singular.toLowerCase()], result => {\n                return new Instance(result);\n              });\n\n              resolve(results);\n            })\n            .catch(reject);\n      });\n\n    }\n\n    create(instance) {\n      return new bluebird((resolve, reject) => {\n\n        switch (true) {\n          case (instance instanceof Monitor):\n          case (instance instanceof Contact):\n            if (!instance.validate()) {\n              return reject(instance.validate());\n            }\n            break;\n\n          default :\n            //let type = Object.prototype.toString.call(new Monitor);\n            return reject(`${typeof instance} is an unsupported instance`);\n        }\n\n        let instanceName = instance.constructor.singular;\n        let endpoint = 'new' + instanceName.charAt(0).toUpperCase() + instanceName.slice(1);\n\n        this.request('GET', endpoint, instance.parse())\n            .then(response => {\n              return response[instance.singular];\n            });\n      });\n\n    }\n\n    edit(instance) {\n      return new bluebird((resolve, reject) => {\n\n        switch (true) {\n          case instance instanceof Monitor:\n          case instance instanceof Contact: {\n            if (!instance.validate()) {\n              return reject(instance.validate());\n            }\n          }\n\n          default : {\n            return reject('This is an unsupported instance');\n          }\n\n        }\n\n        let instanceName = instance.constructor.singular;\n        let endpoint = 'edit' + instanceName.charAt(0).toUpperCase() + instanceName.slice(1);\n\n        return this.request('GET', endpoint, instance.parse())\n            .then(response => {\n              resolve(response[instance.singular]);\n\n            })\n            .catch(reject);\n      });\n    }\n\n    remove(instance) {\n      let instanceName = instance.constructor.singular;\n      let endpoint = 'delete' + instanceName.charAt(0).toUpperCase() + instanceName.slice(1);\n\n      return this.request('GET', endpoint, {monitorID: instance.id})\n        .then(response => {\n          return response[instance.singular];\n\n        });\n    }\n\n  }\n\n  var client = client__Client;\n\n  exports.Client = client;\n\n  'use strict';\n\n  /**\n   * Created by Luke on 30/06/15.\n   */\n\n}));\n"],"sourceRoot":"/source/"}